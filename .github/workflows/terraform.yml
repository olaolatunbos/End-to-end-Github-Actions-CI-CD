name: "Terraform CI/CD"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform_static_analysis:
    name: "Terraform Static Analysis"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format
        run: |
          terraform fmt -check
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Terraform Initialize
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Validate
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Terraform Lint
        run: tflint
  terraform_plan_test:
    name: "Terraform Plan for Test"
    runs-on: ubuntu-latest
    needs: terraform_static_analysis
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Plan for Test
        id: plan-test
        run: |
          terraform init
          terraform plan -var-file=terraform.tfvars -out=plan-test
          terraform show -no-color plan-test > plan-test.txt

      - name: Upload Terraform Plan Artifact for Test
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: plan-test
          path: plan-test

      - name: Read Terraform Plan Output for Test
        if: github.event_name == 'pull_request'
        run: |
          echo "PLAN_TEST<<EOF" >> $GITHUB_ENV
          cat plan-test.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment Test Plan Output on PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Terraform Test Plan Output:
            ```
            ${{ env.PLAN_TEST }}
            ```
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
