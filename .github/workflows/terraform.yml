name: "Terraform CI/CD"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIAL).clientId }}
  ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIAL).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIAL).subscriptionId }}
  ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIAL).tenantId }}

jobs:
  terraform_static_analysis:
    name: "Terraform Static Analysis"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format
        working-directory: ./terraform
        run: |
          terraform fmt -check
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Terraform Initialize
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Terraform Lint
        working-directory: ./terraform
        run: tflint
  terraform_plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    needs: terraform_static_analysis
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        id: plan
        run: |
          terraform plan -no-color > plan.txt
          echo '```terraform' > plan_output.txt
          cat plan.txt >> plan_output.txt
          echo '```' >> plan_output.txt

      - name: Comment Terraform Plan on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: ./terraform/plan_output.txt
